<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 빈 객체를 자동 등록 처리 -->
    <context:component-scan base-package="com.spring.blog.blog" />



    <!-- mvc 관련 객체 등록 작업 진행 : @RequestMapping 애노테이션을 처리등.. -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean
                    class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html; charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean
                    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html; charset=UTF-8</value>
                        <value>application/json; charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/**" /> <mvc:exclude-mapping
        path="/sign/**.do" /> <bean class="com.naver.sign.login.AuthInterceptor"
        /> </mvc:interceptor> </mvc:interceptors> -->

    <!-- <mvc:view-controller path="/file/uploadForm.do" view-name="file/fileUploadForm"
        /> -->

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 최대 업로드 파일 사이즈 : 10MB -->
        <property name="maxUploadSize" value="10485760" />
    </bean>
    <!-- WEB의 정적 페이지 처리 등을 위해 사용 -->
    <mvc:default-servlet-handler />

    <!-- 마이바티스 객체(석성희) -->
    <context:property-placeholder location="classpath:config/mybatis/db.properties" />

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.naver.repository.domain" />
        <property name="mapperLocations" value="classpath:config/query/*.xml" />
        <property name="configLocation" value="classpath:config/mybatis/sqlMapConfig.xml" />
    </bean>
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="retrieve*" read-only="true" />
            <tx:method name="insert*" rollback-for="Exception" />
            <tx:method name="update*" rollback-for="Exception" />
            <tx:method name="delete*" rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="tranMethod"
                      expression="execution(public * db.member.service.*Impl.*(..)) " />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="tranMethod" />
    </aop:config>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.spring.blog.blog.dao" />
    </bean>
    <!-- JSP 페이지로 이동 시 아래의 설정 내용을 참고 -->
    <mvc:view-resolvers>
        <mvc:jsp prefix="/WEB-INF/jsp/" suffix=".jsp" />
    </mvc:view-resolvers>

</beans>